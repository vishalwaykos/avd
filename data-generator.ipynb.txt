{"cells": [{"cell_type": "code", "execution_count": 3, "id": "2d67775d-2272-4979-a366-b08c50aef1f4", "metadata": {"tags": []}, "outputs": [{"name": "stdout", "output_type": "stream", "text": "File patients_data/health_data_20250227092523.json uploaded to bucket sampple-bkt-13022025.\n"}], "source": "import random\nimport json\nfrom datetime import datetime, timedelta, timezone\nfrom google.cloud import storage\n\n# Generator function for creating random health data samples\ndef generate_health_data(num_samples=10):\n    base_time = datetime.now(timezone.utc)\n    for i in range(1, num_samples + 1):\n        patient_data = {\n            \"patient_id\": f\"patient_{str(i).zfill(3)}\",\n            \"heart_rate\": random.randint(40, 150),  # Heart rate between 40 and 150 bpm\n            \"blood_pressure\": random.randint(90, 180),  # Blood pressure between 90 and 180 mmHg\n            \"temperature\": round(random.uniform(35.0, 40.0), 1),  # Temperature between 35.0 and 40.0 degrees Celsius\n            \"timestamp\": (base_time + timedelta(minutes=i)).strftime(\"%Y-%m-%dT%H:%M:%SZ\")\n        }\n        yield patient_data\n\n# Function to write data to GCS in Newline JSON format\ndef write_to_gcs(bucket_name, file_name, data):\n    # Initialize a storage client\n    storage_client = storage.Client()\n    # Get the bucket\n    bucket = storage_client.get_bucket(bucket_name)\n    # Create a blob (file object in the bucket)\n    blob = bucket.blob(file_name)\n    \n    # Prepare the NDJSON data with each JSON object on a new line\n    ndjson_data = \"\\n\".join(json.dumps(record) for record in data)\n    \n    # Upload the NDJSON data as a string\n    blob.upload_from_string(ndjson_data, content_type='application/json')\n    print(f\"File {file_name} uploaded to bucket {bucket_name}.\")\n\n# Main function to generate data and upload to GCS\ndef main():\n    # Specify the GCS bucket name\n    bucket_name = \"sampple-bkt-13022025\"  # Replace with your GCS bucket name\n    \n    # Create a timestamped file name\n    timestamp = datetime.now(timezone.utc).strftime(\"%Y%m%d%H%M%S\")\n    file_name = f\"patients_data/health_data_{timestamp}.json\"\n    \n    # Generate the data\n    num_samples = 10\n    data = list(generate_health_data(num_samples))\n    \n    # Write the data to the specified GCS bucket in NDJSON format\n    write_to_gcs(bucket_name, file_name, data)\n\n# Run the main function\nif __name__ == \"__main__\":\n    main()\n"}, {"cell_type": "code", "execution_count": null, "id": "26557596-3904-4944-8fdf-f0f9fc05085a", "metadata": {}, "outputs": [], "source": ""}], "metadata": {"kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.11.8"}}, "nbformat": 4, "nbformat_minor": 5}