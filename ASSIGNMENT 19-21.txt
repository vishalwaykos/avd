Q19.Create Polygon class with a method that accepts the number of sides using inputSides() method. Derive Traingle class from Polygon class. Write area() method in the Traingle class. Create an object to Triangle class and call the inputSides() and pass number of sides as 3. Then display area of traingle by calling area().

class Polygon:
    def __init__(self):
        self.side = 0
        self.ls = []

    def inputSides(self):
        self.side = int(input("enter the number of sides"))
        self.ls = [int(input(f"enter the length of sides {i+1} :")) for i in range(self.side)]

class Triangle(Polygon):
    def __init__(self):
        super().__init__()

    def calculate_area(self):
        a,b,c = self.ls
        s = (a+b+c)/2
        area = (s*(s-a)*(s-b)*(s-c))
        return area

Q20). Create Child class from Father and Mother classes. Define property in the Father class as Rs. 500000 and in Mother class as Rs. 400000. Now, write a method display() in the Child class that displays child   property as sum of the properties of its parents.


_____________________________________________
tr = Triangle()
tr.inputSides()
print("area of triangle is",tr.calculate_area())

class Father:
    def __init__(self):
        self.father_property = 500000

class Mother:
    def __init__(self):
        self.mother_property = 400000

class Child(Father, Mother):
    def __init__(self):
        Father.__init__(self)
        Mother.__init__(self)
        self.child_property = self.father_property + self.mother_property

    def display(self):
        print(f"Child's property: Rs. {self.child_property}")

c12 = Child()
c12.display()

q21
# Write a method in the super class to calculate square value.
# Override this method in the sub class to calculate cube value.

class Super:
    def calculate(self,x):
        total = x**x
        print(f"square of {x} is = {total} ")

class Sub(Super):
    def calculate(self,x):
        total = x*x*x
        print(f"cube of {x} is = {total}")

s = Sub()
s.calculate(2)


